# -----------------------------------------------------------------------------
#
# Fresh minimal install
#
http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/ports-using.html
# portsnap fetch
# portsnap extract
# portsnap update

gm# cd /usr/ports/sysutils/screen && make install clean

gm# cd /usr/ports/irc/irssi && make install clean

gm# cd /usr/ports/devel/git && make install clean

gm# cd /usr/ports/devel/subversion && make install clean

# -----------------------------------------------------------------------------
#
# Apache
#
# Take a copy of whole /usr/local/etc/apache22, its the config directory.
#
gm# cd /usr/ports/www/apache22 && make install clean
gm# echo 'apache22_enable="YES"' >> /etc/rc.conf
gm# vi /usr/local/etc/apache22/httpd.conf 

#DO: Include config file for virtualhosts from httpd.conf
gm# vi /usr/local/etc/apache22/extra/httpd-vhosts.conf
<URL:http://httpd.apache.org/docs/2.2/vhosts/>
<VirtualHost *:80>
    DocumentRoot "/usr/home/mos/htdocs/dbwebb.se"
    <Directory "/usr/home/mos/htdocs/dbwebb.se">
        Options Indexes FollowSymLinks
        AllowOverride None
        Order allow,deny
        Allow from all
    </Directory>
    ServerName dbwebb.se
    ServerAlias www.dbwebb.se
    ErrorLog "/usr/home/mos/htdocs/log/dbwebb.se-error_log"
    CustomLog "/usr/home/mos/htdocs/log/dbwebb.se-access_log" common
</VirtualHost>


gm# vi /usr/local/etc/apache22/Includes/httpd-hide-git-svn.conf 
<DirectoryMatch \.svn>
   Order allow,deny
   Deny from all
</DirectoryMatch>

<DirectoryMatch \.git>
   Order allow,deny
   Deny from all
</DirectoryMatch>

#apachectl restart

#
# https
#
# http://onlamp.com/pub/a/onlamp/2008/03/04/step-by-step-configuring-ssl-under-apache.html
#
# Create certs
gm#: openssl req -new -x509 -days 365 -sha1 -newkey rsa:1024 -nodes -keyout server.key -out server.crt -subj '/DC=se/DC=dbwebb/CN=ldap.dbwebb.se'
gm# ls -l /usr/local/etc/apache22/server.*
-rw-r--r--  1 root  wheel  993 Jun 10 09:32 /usr/local/etc/apache22/server.crt
-r--------  1 root  wheel  887 Jun 10 09:32 /usr/local/etc/apache22/server.key
gm# 

gm# vi httpd.conf
# Secure (SSL/TLS) connections
Include etc/apache22/extra/httpd-ssl.conf

#apachectl restart


# -----------------------------------------------------------------------------
#
# MySQL
#
# http://dev.mysql.com/doc/refman/5.1/en/mysql-installation-freebsd.html
#
gm# cd /usr/ports/databases/mysql51-client && make install clean
gm# cd /usr/ports/databases/mysql51-server/ && make install clean
gm# /usr/local/bin/mysql_install_db
gm# chown -R mysql /var/db/mysql/
gm# chgrp -R mysql /var/db/mysql/
gm# /usr/local/bin/mysqld_safe -user=mysql &
gm# mysqladmin shutdown -p
gm# /usr/local/bin/mysqladmin -u root password newpassword
gm# echo 'mysql_enable="YES"' >> /etc/rc.conf

#config
mysql> SELECT User, Host, Password FROM mysql.user;
mysql> GRANT ALL ON *.* TO mos@localhost IDENTIFIED BY 'password';
mysql> update mysql.user set
Password = (select Password from mysql.user where User = 'root' and Host = 'localhost')
where User = 'root';
mysql> delete from mysql.user where User = '';

gm# /usr/local/etc/rc.d/mysql-server restart


# -----------------------------------------------------------------------------
#
# PHP
# 
# Don't forget to check to build for apache.
#
gm# cd /usr/ports/lang/php5 && make config install clean

gm# cat /usr/local/etc/apache22/Includes/enable-php5.conf 
AddType application/x-httpd-php .php
AddType application/x-httpd-php-source .phps
#AddType application/x-httpd-php .php .htm .html

# Create the php.ini-file. Disable magic quotes, enable error reporting.
# Test configuration using Utility/check_php_config.php

gm# cd /usr/ports/www/php5-session && make install clean
gm# cd /usr/ports/databases/php5-mysqli && make install clean
gm# cd /usr/ports/net/php5-ldap && make install clean

#apachectl restart


# -----------------------------------------------------------------------------
#
# OpenLDAP, using TSL
# 
# Instructions from Utility/ldap.ldif
#
gm# cd /usr/ports/net/openldap24-server && make install clean
gm# vi /usr/local/etc/openldap/slapd.conf

gm# echo 'slapd_enable="YES"' >> /etc/rc.conf

gm# /usr/local/etc/rc.d/slapd start
gm# sockstat -4 -p 389


# Install client (if not already installed)
gm# cd /usr/ports/net/openldap24-client && make install clean
gm# cd /usr/ports/sysutils/ldapvi && make install clean

# Fill database with some content?
#
# Check if there is a namingContext
# ldapsearch -x -b '' -s base '(objectclass=*)' namingContexts
#
# Add entries from file
# ldapadd -x -D "cn=Manager,dc=dbwebb,dc=se" -W -f ldap.ldif
#
# Edit entries
# ldapvi -D "cn=Manager,dc=dbwebb,dc=se" --discover


# Check that it works from PHP?
#
# http://dbwebb.se/utility/ldap.php


# ------- OBSOLETE START ----------
# OBSOLETE, use same certificate as apache instead.
#
# Enable TSL
gm# vi /usr/local/etc/openldap/slapd.conf
Add ---
security ssf=128
TLSCertificateFile    /usr/local/etc/openldap/ssl/cert.crt
TLSCertificateKeyFile /usr/local/etc/openldap/ssl/cert.key
TLSCACertificateFile  /usr/local/etc/openldap/ssl/cacert.crt
--- Stop add

# Create and sign the certificates, store them in /usr/local/etc/openldap/ssl
% openssl genrsa -out cert.key 1024
% openssl req -new -key cert.key -out cert.csr
% openssl x509 -req -in cert.csr -days 365 -signkey cert.key -out cert.crt
# ------- OBSOLETE STOP ----------

#
# Enable TLS and SSL (ldaps://)
#
gm# vi /usr/local/etc/openldap/slapd.conf
Add ---
security ssf=128
TLSCertificateFile    /usr/local/etc/openldap/ssl/server.crt
TLSCertificateKeyFile /usr/local/etc/openldap/ssl/server.key
TLSCACertificateFile  /usr/local/etc/openldap/ssl/server.crt
--- Stop add

# Copy the certificate from apache httpds or create a new ones
# and store them in /usr/local/etc/openldap/ssl
#
gm#: openssl req -new -x509 -days 365 -sha1 -newkey rsa:1024 -nodes -keyout server.key -out server.crt -subj '/DC=se/DC=dbwebb/CN=ldap.dbwebb.se'

# Start slapd to listen on both ldap:// and ldaps://
gm# echo 'slapd_flags=\'-h "ldaps:/// ldap:///"\'' >> /etc/rc.conf

gm# /usr/local/etc/rc.d/slapd restart
gm# sockstat -4 -p "389,636'

# Client issue to NOT validate self-signed server cert
gm# vi /usr/local/etc/openldap/ldap.conf
Add ---
TLS_REQCERT allow
--- stop add

# Test that TLS works using -Z
gm# ldapsearch -Z -x -b '' -s base '(objectclass=*)' namingContexts
gm# ldapvi -Z --tls allow -D "cn=Manager,dc=dbwebb,dc=se" --discover
# http://dbwebb.se/utility/ldap.php


# ---------------------------------------------------------------------------------
#
# Enable login through LDAP
#
# http://www.freebsd.org/doc/en/articles/ldap-auth/article.html
#
gm# cd security/pam_ldap/ ; make install clean ;

Create the config-file /usr/local/etc/ldap.conf, may be same settings as openldap/ldap.conf

Edit /etc/pam.d/sshd, add line:
auth            sufficient      /usr/local/lib/pam_ldap.se      no_warn
account         required        /usr/local/lib/pam_ldap.so      no_warn ignore_authinfo_unavail ignore_unknown_user

#
# Not needed to set up nss to allow gettin guid&gid from LDAP
#
gm# cd /usr/ports/net/nss_ldap/; make install clean;
The nss_ldap module expects to find its configuration files at the
following paths:

LDAP configuration:     /usr/local/etc/nss_ldap.conf
LDAP secret (optional): /usr/local/etc/nss_ldap.secret

